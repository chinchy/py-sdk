# coding: utf-8

"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class ExchangeAsset(BaseModel):
    """
    ExchangeAsset
    """
    id: Optional[StrictStr] = None
    balance: Optional[StrictStr] = None
    locked_amount: Optional[StrictStr] = Field(None, alias="lockedAmount")
    total: Optional[StrictStr] = None
    available: Optional[StrictStr] = None
    __properties = ["id", "balance", "lockedAmount", "total", "available"]

    class Config:
        populate_by_name = True
        validate_assignment = True
        arbitrary_types_allowed = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ExchangeAsset:
        """Create an instance of ExchangeAsset from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ExchangeAsset:
        """Create an instance of ExchangeAsset from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return ExchangeAsset.parse_obj(obj)

        _obj = ExchangeAsset.parse_obj({
            "id": obj.get("id"),
            "balance": obj.get("balance"),
            "locked_amount": obj.get("lockedAmount"),
            "total": obj.get("total"),
            "available": obj.get("available")
        })
        return _obj

