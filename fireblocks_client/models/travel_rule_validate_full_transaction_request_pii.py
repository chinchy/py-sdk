# coding: utf-8

"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, StrictStr

class TravelRuleValidateFullTransactionRequestPii(BaseModel):
    """
    Personal identifiable information related to the transaction
    """
    full_name: StrictStr = Field(..., alias="fullName")
    date_of_birth: StrictStr = Field(..., alias="dateOfBirth")
    place_of_birth: StrictStr = Field(..., alias="placeOfBirth")
    address: StrictStr = ...
    identification_number: StrictStr = Field(..., alias="identificationNumber")
    nationality: StrictStr = ...
    country_of_residence: StrictStr = Field(..., alias="countryOfResidence")
    tax_identification_number: StrictStr = Field(..., alias="taxIdentificationNumber")
    customer_number: StrictStr = Field(..., alias="customerNumber")
    __properties = ["fullName", "dateOfBirth", "placeOfBirth", "address", "identificationNumber", "nationality", "countryOfResidence", "taxIdentificationNumber", "customerNumber"]

    class Config:
        populate_by_name = True
        validate_assignment = True
        arbitrary_types_allowed = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> TravelRuleValidateFullTransactionRequestPii:
        """Create an instance of TravelRuleValidateFullTransactionRequestPii from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> TravelRuleValidateFullTransactionRequestPii:
        """Create an instance of TravelRuleValidateFullTransactionRequestPii from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return TravelRuleValidateFullTransactionRequestPii.parse_obj(obj)

        _obj = TravelRuleValidateFullTransactionRequestPii.parse_obj({
            "full_name": obj.get("fullName"),
            "date_of_birth": obj.get("dateOfBirth"),
            "place_of_birth": obj.get("placeOfBirth"),
            "address": obj.get("address"),
            "identification_number": obj.get("identificationNumber"),
            "nationality": obj.get("nationality"),
            "country_of_residence": obj.get("countryOfResidence"),
            "tax_identification_number": obj.get("taxIdentificationNumber"),
            "customer_number": obj.get("customerNumber")
        })
        return _obj

