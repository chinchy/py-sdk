# coding: utf-8

"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import fireblocks_client
from fireblocks_client.models.transaction_request import TransactionRequest  # noqa: E501
from fireblocks_client.rest import ApiException

class TestTransactionRequest(unittest.TestCase):
    """TransactionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TransactionRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransactionRequest`
        """
        model = fireblocks_client.models.transaction_request.TransactionRequest()  # noqa: E501
        if include_optional :
            return TransactionRequest(
                operation = 'TRANSFER', 
                note = 'Ticket 123', 
                external_tx_id = '00000000-0000-0000-0000-000000000000', 
                asset_id = 'ETH', 
                source = fireblocks_client.models.transfer_peer_path.TransferPeerPath(
                    type = 'VAULT_ACCOUNT', 
                    id = '', 
                    wallet_id = '', ), 
                destination = None, 
                destinations = [
                    fireblocks_client.models.transaction_request_destination.TransactionRequestDestination(
                        amount = '', 
                        destination = null, )
                    ], 
                amount = None, 
                treat_as_gross_amount = False, 
                force_sweep = False, 
                fee_level = 'MEDIUM', 
                fee = None, 
                priority_fee = None, 
                fail_on_low_fee = True, 
                max_fee = '120', 
                gas_limit = None, 
                gas_price = None, 
                network_fee = None, 
                replace_tx_by_hash = '00000000-0000-0000-0000-000000000000', 
                extra_parameters = None, 
                customer_ref_id = 'abcdef', 
                auto_staking = True, 
                network_staking = None, 
                cpu_staking = None
            )
        else :
            return TransactionRequest(
        )
        """

    def testTransactionRequest(self):
        """Test TransactionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
